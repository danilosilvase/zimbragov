---
# Script needs an inventory file when run against real servers.
# For local testing with vagrant use hosts: all
# for silent kernel compile a kernel config file similar to the server this run against is required
# playbook expect kernel.config file to be in the same folder as playbook upgrade.yml
# kernel.config can be generated by copying .config file for kernel 4.4.23 form an identical server 
# ansible-playbook upgrade.yml -i inventory.yml -u root -k

#- hosts: centos-servers
- hosts: zimbra
#  vars:
#    kernel_ver: 4.4.23
#  remote_user: root
#  become: yes
#  become_method: sudo
  tasks:
#  - name: install development tools package group
#    yum: name="@Development tools" state=present update_cache=yes

#  - name: install kernel dev packages
#    yum: name={{ item }} state=present
#    with_items: 
#    - ncurses-devel
#    - bc
#    - openssl-devel
#    - hmaccalc
#    - zlib-devel
#    - binutils-devel
#    - elfutils-libelf-devel

#  - name: install development tools package group
#    yum: name="@Development tools" state=present update_cache=yes

  - name: install dpendences
    yum: name={{ item }} state=present
    with_items: 
    - nano
    - telnet
    
#  - name: download kernel
#    get_url:
#      url: https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.23.tar.xz
#      dest: /tmp/linux-{{ kernel_ver }}.tar.xz

#  - name: untar kernel
#    shell: rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
#    args:
#      chdir: /tmp/

#  - name: copy kernel config file for make
#    copy: src=./kernel.config dest=/tmp/linux-{{ kernel_ver }}/.config

#  - name: install kernel
#    shell: "{{ item }}"
#    with_items:
#    - make silentoldconfig .config
#    - make 
#    - make modules
#    - make modules_install
#    - make install
#    args:
#      chdir: /tmp/linux-{{ kernel_ver }}/

  - name: restart machine
    shell: sleep 2 && shutdown -r +1 "Ansible updates triggered"
    async: 1
    poll: 0
    sudo: true
    ignore_errors: true

  - name: waiting for server to come back
    local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
    sudo: false

#  - name: rerun make install to correct grub entry order
#    shell: make install 
#    args:
#      chdir: /tmp/linux-{{ kernel_ver }}/

  - name: restart machine
    shell: sleep 2 && shutdown -r +1 "Ansible updates triggered"
    async: 1
    poll: 0
    sudo: true
    ignore_errors: true

  - name: waiting for server to come back
    local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
    sudo: false
 
  - name: confirm kernel version
    shell: uname -a
    register: kernel_version

#  - debug: var=kernel_version.stdout

